import streamlit as st
import pandas as pd



def mostrarrubricadecano():

# Datos simulados
   facultades = ['Facultad de Ciencias', 'Facultad de Ingenier√≠a', 'Facultad de Medicina']
   carreras = {
       'Facultad de Ciencias': ['Biolog√≠a', 'F√≠sica', 'Qu√≠mica'],
       'Facultad de Ingenier√≠a': ['Ingenier√≠a Civil', 'Ingenier√≠a de Sistemas', 'Ingenier√≠a Mec√°nica'],
       'Facultad de Medicina': ['Medicina', 'Enfermer√≠a', 'Odontolog√≠a']
   }
   cursos = {
       'Biolog√≠a': ['Biolog√≠a 101', 'Biolog√≠a 102'],
       'F√≠sica': ['F√≠sica 101', 'F√≠sica 102'],
       'Ingenier√≠a Civil': ['C√°lculo 1', 'Estructuras 1'],
       'Medicina': ['Anatom√≠a 1', 'Fisiolog√≠a 1']
   }
   rubricas = {
       'Biolog√≠a 101': [
           {'codigo_curso': 'BIO101', 'nombre_curso': 'Biolog√≠a 101', 'docente': 'Dr. P√©rez', 'periodo': '2024-1', 'codigo_alumno': 'A001', 'nombre_alumno': 'Juan P√©rez', 'rubrica': 'Informe sobre c√©lulas: Evaluaci√≥n Final'},
           {'codigo_curso': 'BIO101', 'nombre_curso': 'Biolog√≠a 101', 'docente': 'Dr. P√©rez', 'periodo': '2024-1', 'codigo_alumno': 'A002', 'nombre_alumno': 'Ana L√≥pez', 'rubrica': 'Informe sobre c√©lulas: Evaluaci√≥n Final'}
       ],
       'F√≠sica 101': [
           {'codigo_curso': 'FIS101', 'nombre_curso': 'F√≠sica 101', 'docente': 'Dr. Garc√≠a', 'periodo': '2024-1', 'codigo_alumno': 'A003', 'nombre_alumno': 'Carlos Gonz√°lez', 'rubrica': 'Examen Final: F√≠sica Te√≥rica'},
           {'codigo_curso': 'FIS101', 'nombre_curso': 'F√≠sica 101', 'docente': 'Dr. Garc√≠a', 'periodo': '2024-1', 'codigo_alumno': 'A004', 'nombre_alumno': 'Laura Mart√≠nez', 'rubrica': 'Examen Final: F√≠sica Te√≥rica'}
       ]
   }
   
   # Interfaz de Streamlit
   st.title("Sistema de R√∫bricas - Decano")
   
   # Selecci√≥n de Facultad
   facultad = st.selectbox("Selecciona la Facultad", facultades)
   
   # Selecci√≥n de Carrera (dependiendo de la Facultad seleccionada)
   carrera = st.selectbox("Selecciona la Carrera", carreras[facultad])
   
   # Selecci√≥n de Curso (dependiendo de la Carrera seleccionada)
   curso = st.selectbox("Selecciona el Curso", cursos[carrera])
   
   # Mostrar los datos de las r√∫bricas del curso seleccionado
   if curso in rubricas:
       st.subheader(f"R√∫bricas del curso: {curso}")
   
       # Convertir los datos de las r√∫bricas en un DataFrame para visualizaci√≥n
       rubricas_df = pd.DataFrame(rubricas[curso])
   
       # Mostrar la tabla sin la columna de r√∫bricas, solo con los datos clave
       st.dataframe(rubricas_df[['codigo_curso', 'nombre_curso', 'docente', 'periodo', 'codigo_alumno', 'nombre_alumno']])
   
       # Al hacer clic en el bot√≥n de lupa, mostrar los detalles de la r√∫brica
       for index, row in rubricas_df.iterrows():
           if st.button(f"üîç Ver r√∫brica de {row['nombre_alumno']}", key=row['codigo_alumno']):
               st.subheader(f"Detalles de la R√∫brica para {row['nombre_alumno']}")
               st.write(f"**C√≥digo del curso**: {row['codigo_curso']}")
               st.write(f"**Nombre del curso**: {row['nombre_curso']}")
               st.write(f"**Docente**: {row['docente']}")
               st.write(f"**Periodo**: {row['periodo']}")
               st.write(f"**C√≥digo del alumno**: {row['codigo_alumno']}")
               st.write(f"**Nombre del alumno**: {row['nombre_alumno']}")
               st.write(f"**R√∫brica**: {row['rubrica']}")
   else:
       st.write("No hay r√∫bricas disponibles para este curso.")
   